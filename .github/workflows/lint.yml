name: 🧼 lint

on:
  workflow_call:
    inputs:
      library:
        required: true
        type: string
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 12 * * 0'

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: 📥 Install clang-format
        shell: bash
        run: sudo apt install clang-format-10

      - name: 📥 Install cspell
        shell: bash
        run: sudo npm install -g cspell

      - name: 📥 Install libclang-11-dev (for name style check)
        shell: bash
        run: sudo apt install libclang-11-dev

      - name: 📥 Install pip package 'clang' & 'pyyaml' (for ncc)
        shell: bash
        run: python3 -m pip install clang==11.1 pyyaml

      # Because inputs.library is required for workflow_calls, if this value is
      # blank it means that the workflow was ran in libembeddedhal and not
      # remotely.
      - name: 🖨️ Cloning .naming.style from libembeddedhal
        if: ${{ inputs.library != '' }}
        run: wget https://raw.githubusercontent.com/libembeddedhal/libembeddedhal/main/.naming.style -O .naming.style

      - name: 📃 Naming Convention Check
        shell: bash
        if: always()
        run: |
              git clone https://github.com/nithinn/ncc.git ncc
              ./ncc/ncc.py --recurse --path include \
              --exclude */third_party/* \
              --style .naming.style | tee ncc.stderr
              [ ! -s ncc.stderr ]

      - name: 🖨️ Cloning .clang-format from libembeddedhal
        if: ${{ inputs.library != '' }}
        run: wget https://raw.githubusercontent.com/libembeddedhal/libembeddedhal/main/.clang-format -O .clang-format

      - name: 🧹 Format Check
        shell: bash
        if: always()
        run: |
             clang-format --dry-run --Werror \
             $(find include -name "*.hpp" -not -path "*/third_party/*")

      - name: 🔤 Check Spelling
        shell: bash
        if: always()
        run: cspell include/**/*.hpp
